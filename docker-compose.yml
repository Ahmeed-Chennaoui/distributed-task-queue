version: "3"
networks:
  kafka_network:


volumes:
  kafka_data:
  kafka2_data:
  kafka3_data:
  zookeeper1_data:
  cassandra-database:


services:
  zookeeper1:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=1
    networks:
      - kafka_network
    volumes:
      - "zookeeper1_data:/bitnami"
  cassandra:
    container_name: cassandra
    image: cassandra
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES" ]
      interval: 30s
      timeout: 30s
    networks:
      - kafka_network
    ports:
      - "9042:9042"
    expose:
      - "9042"
    volumes:
      - cassandra-database:/var/lib/cassandra
  ui:
    container_name: ui
    image: ui:0.1
    depends_on:
      - api
    networks:
      - kafka_network
    ports:
      - "3000:3000"
    expose:
      - "3000"
    environment:
      - REACT_APP_API_URL=api
      - REACT_APP_API_PORT=5000
  api:
    container_name: api
    image: api:0.10.0-SNAPSHOT
    networks:
      - kafka_network
    ports:
      - "8080:8080"
    environment:
      - DB_URL=cassandra
      - bootstrap_servers=kafka:9092,kafka2:9092,kafka3:9092
    depends_on:
      cassandra:
        condition: service_healthy

  kafka:
    image: 'bitnami/kafka:latest'
    user: root
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - kafka_network

  kafka2:
    image: 'bitnami/kafka:latest'
    user: root
    ports:
      - '9093:9092'
    environment:
      - KAFKA_CFG_BROKER_ID=2
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181
    volumes:
      - "kafka2_data:/bitnami"
    networks:
      - kafka_network

  kafka3:
    image: 'bitnami/kafka:latest'
    user: root
    ports:
      - '9094:9092'
    environment:
      - KAFKA_CFG_BROKER_ID=3
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181
    volumes:
      - "kafka3_data:/bitnami"
    networks:
      - kafka_network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 5000:8080
    depends_on:
      - kafka
    volumes:
      - ./kafka-ui/config.yml:/etc/kafkaui/dynamic_config.yaml
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - kafka_network
  cache:
    container_name: cache
    image: redis:7.2.4
    ports:
      - 6379:6379
    networks:
      - kafka_network
  producer:
    container_name: producer
    image: producer:0.12.0-SNAPSHOT
    networks:
      - kafka_network
    environment:
      - bootstrap_servers=kafka:9092,kafka2:9092,kafka3:9092
      - DB_URL=cassandra
      - CACHE_URL=cache
    depends_on:
      cassandra:
        condition: service_healthy

  consumer1:
    depends_on:
      - producer
    container_name: consumer1
    image: consumer:0.12.0-SNAPSHOT
    restart: always
    environment:
      - topic=first_prime_larger_than_n,benchmark_primes
      - bootstrap_servers=kafka:9092,kafka2:9092,kafka3:9092
      - group_id=group-1
      - DB_URL=cassandra
      - CACHE_URL=cache
    networks:
      - kafka_network

  consumer2:
    depends_on:
      - producer
    container_name: consumer2
    image: consumer:0.12.0-SNAPSHOT
    restart: always
    environment:
      - topic=benchmark_primes,first_prime_larger_than_n
      - bootstrap_servers=kafka:9092,kafka2:9092,kafka3:9092
      - group_id=group-1
      - DB_URL=cassandra
      - CACHE_URL=cache
    networks:
      - kafka_network
  consumer3:
    depends_on:
      - producer

    container_name: consumer3
    image: consumer:0.12.0-SNAPSHOT
    restart: always
    environment:
      - topic=benchmark_primes,first_prime_larger_than_n
      - bootstrap_servers=kafka:9092,kafka2:9092,kafka3:9092
      - group_id=group-1
      - DB_URL=cassandra
      - CACHE_URL=cache
    networks:
      - kafka_network
  consumer4:
    depends_on:
      - producer
    container_name: consumer4
    image: consumer:0.12.0-SNAPSHOT
    restart: always
    environment:
      - topic=benchmark_primes,first_prime_larger_than_n
      - bootstrap_servers=kafka:9092,kafka2:9092,kafka3:9092
      - group_id=group-1
      - DB_URL=cassandra
      - CACHE_URL=cache
    networks:
      - kafka_network
